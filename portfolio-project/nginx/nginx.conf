# HTTP (port 80) 서버 블록: HTTPS로 안전하게 리디렉션
server {
    listen 80;
    server_name portfolio.ywsung.ai.kr;

    # Let's Encrypt 갱신 지원 (선택 사항이지만 권장됩니다)
    location ~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    # 그 외 모든 HTTP 요청은 301 (영구) 리디렉션을 통해 HTTPS로 보냅니다.
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS (port 443) 서버 블록: 메인 애플리케이션 로직
server {
    listen 443 ssl http2; # 성능 향상을 위해 HTTP/2 활성화
    server_name portfolio.ywsung.ai.kr;

    # SSL 인증서 설정
    ssl_certificate     /etc/ssl/certs/cloudflare-origin.pem;
    ssl_certificate_key /etc/ssl/private/cloudflare-origin.key;

    # 최신 보안 프로토콜 사용
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # 디버깅을 위한 로그 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;


    # --- 요청 경로(Location) 분기 처리 ---

    # 1. 프론트엔드 애플리케이션 (Vue.js SPA)
    # API나 static 경로가 아닌 모든 요청을 처리합니다.
    location / {
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket 지원 (프론트엔드에서 필요시 사용)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # SEO를 위한 브라우저 캐싱 설정
        expires 1h;
        add_header Cache-Control "public, no-transform";
        
        # GZIP 압축 활성화
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    }

    # 2. 백엔드 API
    # /api/ 로 시작하는 모든 요청을 backend 서비스로 전달합니다.
    location /api/ { # 예측 가능성을 위해 경로 끝에 슬래시(/)를 추가했습니다.
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API를 통한 파일 업로드 크기 제한 설정
        client_max_body_size 10M;
    }

    # 3. 정적 파일 (업로드된 이미지 등)
    # /static/ 으로 시작하는 모든 요청을 backend 서비스로 전달합니다.
    location /static/ { # 일관성을 위해 경로 끝에 슬래시(/)를 추가했습니다.
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 브라우저 캐싱 설정 (이미지는 오래 캐시)
        expires 30d;
        add_header Cache-Control "public, no-transform, immutable";
    }
    
    # 4. SEO 최적화를 위한 특별 파일들
    location = /robots.txt {
        proxy_pass http://frontend:80;
        expires 7d;
        add_header Cache-Control "public, no-transform";
    }
    
    location = /sitemap.xml {
        proxy_pass http://backend:8000/api/v1/sitemap.xml;
        expires 1d;
        add_header Cache-Control "public, no-transform";
        add_header Content-Type "application/xml";
    }
}

